name: release
on:
  release:
    types: [published]
env:
  IMAGE_NAME: docker/go-tuf-mirror
  DOCKER_CONFIG: ${{ github.workspace }}/.docker
jobs:
  dockerhub:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@c8f55efbd427e7465d6da1106e7979bc8aaee856 # v1.10.1
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.DOCKER_READ_APP_PRIVATE_KEY }}
          repositories: "attest,go-tuf-mirror"
      - name: Authenticate to AWS
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 #v4.0.2
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: dockerpublicbot
          password: ${{ secrets.DOCKERPUBLICBOT_WRITE_PAT }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: lab:latest
          driver: cloud
          endpoint: docker/default
          install: true
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          build-args: |
            VERSION=v${{ steps.meta.outputs.version }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          outputs: type=oci,tar=false,dest=./unsigned-image
          attests: type=sbom,generator=docker/scout-sbom-indexer:1
          provenance: mode=max
          secrets: |
            GITHUB_TOKEN=${{ steps.app-token.outputs.token }}
      - name: Sign and push
        uses: docker/image-signer-verifier/actions/sign@1b2d2ede2ace3fbfaff1e9145ab1a25a466633c3 # v0.5.3
        with:
          kms-key-arn: ${{ vars.AWS_KMS_ARN }}
          signed-image-path: "${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
